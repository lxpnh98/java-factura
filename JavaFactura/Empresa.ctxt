#BlueJ class context
comment0.target=Empresa
comment0.text=\n\ Classe\ Empresa\ -\ Classe\ que\ representa\ um\ contribuinte\ coletivo.\n\n\ @author\ Alexandre\ Pinho\ (a82441);\ Joel\ Gama\ (a82202);\ Tiago\ Pinheiro\ (a82491).\n
comment1.params=
comment1.target=Empresa()
comment1.text=\n\ Construtor\ por\ omiss\u00E3o\ de\ Empresa.\n
comment10.params=
comment10.target=java.lang.String\ getDefaultAtividade()
comment10.text=\n\ Devolde\ uma\ String\ da\ atividade\ econ\u00F3mica\ escolhida\ default.\n\ @return\ String\ atividade\ econ\u00F3mica\ default.\n
comment11.params=
comment11.target=Empresa\ clone()
comment11.text=\n\ Cria\ uma\ c\u00F3pia\ do\ objecto\ Empresa.\n\ @return\ Empresa\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ M\u00E9todo\ que\ devolve\ a\ representa\u00E7\u00E3o\ em\ string\ da\ Empresa.\n\ @return\ String\ com\ as\ informa\u00E7\u00F5es\ da\ Empresa.\n
comment13.params=emp
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\n\ Verifica\ a\ igualdade\ de\ dois\ objectos\n\ @param\ emp.\n\ @return\ Valor\ boleano\ da\ compara\u00E7\u00E3o.\n
comment14.params=f
comment14.target=void\ inserirPorValor(Fatura)
comment14.text=\n\ M\u00E9todo\ que\ adiciona\ uma\ fatura\ a\ uma\ TreeMap\ em\ fun\u00E7\u00E3o\ do\ seu\ valor.\n\ @param\ Fatura\ fatura\ a\ adicionar.\n\ @return\ TreeMap\ com\ a\ fatura\ inserida.\n
comment15.params=f
comment15.target=void\ inserirPorData(Fatura)
comment15.text=\n\ M\u00E9todo\ que\ adiciona\ uma\ fatura\ a\ uma\ TreeMap\ em\ fun\u00E7\u00E3o\ da\ sua\ Data.\n\ @param\ Fatura\ fatura\ a\ inserir.\n\ @return\ TreeMap\ com\ a\ fatura\ inserida.\n
comment16.params=
comment16.target=java.util.ArrayList\ faturasPorValor()
comment16.text=\n\ M\u00E9todo\ que\ devolve\ um\ ArrayList\ das\ faturas\ ordenadas\ em\ fun\u00E7\u00E3o\ do\ seu\ valor.\n\ @return\ ArrayList\ array\ das\ faturas.\n
comment17.params=
comment17.target=java.util.ArrayList\ faturasPorData()
comment17.text=\n\ M\u00E9todo\ que\ devolve\ um\ ArrayList\ das\ faturas\ ordenadas\ em\ fun\u00E7\u00E3o\ da\ sua\ Data.\n\ @return\ ArrayList\ array\ das\ faturas.\n
comment18.params=begin\ end
comment18.target=double\ totalFaturado(java.util.Date,\ java.util.Date)
comment18.text=\n\ M\u00E9todo\ que\ calcula\ o\ total\ faturado\ por\ uma\ empresa\ num\ dado\ intervalo\ de\ tempo.\n\ @param\ Date\ data\ de\ in\u00EDcio.\n\ @param\ Date\ data\ de\ fim.\n\ @return\ Double\ valor\ do\ total\ acumulado.\ \n
comment19.params=
comment19.target=double\ totalFaturadoDesdeSempre()
comment19.text=\n\ M\u00E9todo\ que\ calcula\ o\ total\ faturado\ por\ uma\ empresa.\n\ @param\ Date\ data\ de\ in\u00EDcio.\n\ @param\ Date\ data\ de\ fim.\n\ @return\ Double\ valor\ do\ total\ faturado.\n
comment2.params=nif\ nome\ email\ morada\ password\ atividadesEconomicas
comment2.target=Empresa(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.util.Set)
comment2.text=\n\ Construtor\ parametrizado\ de\ Empresa.\n
comment20.params=nif
comment20.target=java.util.ArrayList\ faturasPorValorContribuinte(int)
comment20.text=\n\ M\u00E9todo\ que\ devolve\ um\ ArrayList\ das\ faturas\ ordenadas\ em\ fun\u00E7\u00E3o\ do\ nif\ do\ cliente\ e\ por\ Valor.\n\ @return\ ArrayList\ array\ das\ faturas.\n
comment21.params=begin\ end\ nif
comment21.target=java.util.ArrayList\ faturasPorDataContribuinte(java.util.Date,\ java.util.Date,\ int)
comment21.text=\n\ M\u00E9todo\ que\ devolve\ um\ ArrayList\ das\ faturas\ ordenadas\ em\ fun\u00E7\u00E3o\ da\ sua\ Data.\n\ @param\ Date\ data\ de\ in\u00EDcio.\n\ @param\ Date\ data\ de\ fim.\n\ @return\ ArrayList\ array\ de\ faturas.\n
comment3.params=e
comment3.target=Empresa(Empresa)
comment3.text=\n\ Construtor\ de\ c\u00F3pia\ de\ Empresa.\n
comment4.params=
comment4.target=java.lang.Integer\ getNumFaturas()
comment4.text=\n\ Devolde\ o\ n\u00FAmero\ de\ faturas\ associadas\ a\ uma\ empresa.\n\ @return\ Integer\ n\u00FAmero\ de\ faturas.\n
comment5.params=
comment5.target=java.util.TreeMap\ getMapFaturasPorValor()
comment5.text=\n\ Devolde\ uma\ TreeMap.\n\ @return\ TreeMap\ ordenada\ por\ Valor.\n
comment6.params=
comment6.target=java.util.TreeMap\ getMapFaturasPorData()
comment6.text=\n\ Devolde\ uma\ TreeMap.\n\ @return\ TreeMap\ ordenada\ por\ data.\n
comment7.params=f
comment7.target=void\ atualizarFatura(Fatura)
comment7.text=\n\ Atualiza\ uma\ fatura.\n\ @param\ Fatura\ fatura\ a\ atualizar.\n
comment8.params=
comment8.target=java.util.Set\ getAtividadesEconomicas()
comment8.text=\n\ Devolde\ um\ Set.\n\ @return\ Set\ Atividades\ econ\u00F3micas.\n
comment9.params=p
comment9.target=java.lang.Double\ getDeducaoTotal(Plataforma)
comment9.text=\n\ Calcula\ a\ dedu\u00E7\u00E3o.\n\ @return\ Double\ valor\ da\ dedu\u00E7\u00E3o.\n
numComments=22
